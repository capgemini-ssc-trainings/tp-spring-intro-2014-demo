<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   
    <context:component-scan
        base-package="com.capgemini.ssc.training.bookdemo.service" />
        
    
    
    <!-- ================== 3 Profiles to choose from ===================
		- simple
		- jpa
		- spring-data-jpa
		=================================================================-->

    <beans profile="simple">
        <context:component-scan
            base-package="com.capgemini.ssc.training.bookdemo.repository.simple" />
    </beans>
    
    <beans profile="jpa,spring-data-jpa">

			<!-- import the dataSource definition -->
    	<import resource="datasource-config.xml"/>
    	
    	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    	<!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    	<context:property-placeholder location="classpath:db/hsqldb/data-access.properties" system-properties-mode="OVERRIDE"/>
    
    	<!-- Load the hibernate properties -->
		<util:properties id="hibernateProperties"
			location="classpath:db/hsqldb/hibernate.properties" />
		
		<bean id="jpaAdapter"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
			p:database="${jpa.database}" p:showSql="${jpa.showSql}" p:generateDdl="${jpa.generateDdl}"/>
			
		<!-- JPA EntityManagerFactory -->
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			p:dataSource-ref="dataSource" 
			p:jpaVendorAdapter-ref="jpaAdapter"
			p:persistenceUnitName="bookdemo" 
			p:packagesToScan="com.capgemini.ssc.training.bookdemo.model" 
			p:jpaProperties-ref="hibernateProperties"/>
    
    
    
    </beans>

	<beans profile="jpa">
		<context:component-scan
            base-package="com.capgemini.ssc.training.bookdemo.repository.simple" />
	</beans>


</beans>
