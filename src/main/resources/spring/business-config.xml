<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   
    <context:component-scan
        base-package="com.capgemini.ssc.springintro.bookdemo.service" />
        
    
    
    <!-- ================== 3 Profiles to choose from ===================
		- simple
		- jpa
		- spring-data-jpa
		=================================================================-->

    <beans profile="simple">
        <context:component-scan
            base-package="com.capgemini.ssc.springintro.bookdemo.repository.simple" />
    </beans>
    
    <beans profile="jpa,spring-data-jpa">

		<!-- import the dataSource definition -->
    	<import resource="datasource-config.xml"/>
    	
    	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    	<!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    	<context:property-placeholder location="classpath:db/hsqldb/data-access.properties" system-properties-mode="OVERRIDE"/>
    
    	<!-- Load the hibernate properties -->
		<util:properties id="hibernateProperties"
			location="classpath:db/hsqldb/hibernate.properties" />
		
		<bean id="jpaAdapter"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
			p:database="${jpa.database}" p:showSql="${jpa.showSql}" p:generateDdl="${jpa.generateDdl}"/>
			
		<!-- JPA EntityManagerFactory -->
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			p:dataSource-ref="dataSource" 
			p:jpaVendorAdapter-ref="jpaAdapter"
			p:persistenceUnitName="bookdemo" 
			p:packagesToScan="com.capgemini.ssc.springintro.bookdemo.model" 
			p:jpaProperties-ref="hibernateProperties"/>
    
    	<!-- enables scanning for @Transactional annotations -->
	    <tx:annotation-driven />

		<!-- 
			Declarative transaction handling: 
			- enable this configuration part
			- remove the tx:annotation-driven part
		-->	
		<!-- 
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="*" read-only="true" propagation="REQUIRED" />
				<tx:method name="save" read-only="false" propagation="REQUIRED" />
				<tx:method name="delete" read-only="false" propagation="REQUIRED" />
			</tx:attributes>
		</tx:advice>
		<aop:config> 
			<aop:pointcut id="bookServiceMethods" expression="execution(* com.capgemini.ssc.springintro.bookdemo.service.BookService.*(..))" /> 
			<aop:advisor  advice-ref="txAdvice" pointcut-ref="bookServiceMethods" /> 
		</aop:config>
		--> 
    	
    
    	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>


        <!--
			Post-processor to perform exception translation on @Repository classes (from native
			exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
		-->
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
        
    </beans>

	<beans profile="jpa">
		
		<!-- Loads JPA beans. Will automatically be transactional due to @Transactional. 
			 EntityManager will be auto-injected due to @PersistenceContext. 
			 PersistenceExceptions will be auto-translated due to @Repository. 
		-->
		<context:component-scan
            base-package="com.capgemini.ssc.springintro.bookdemo.repository.jpa" />
            
	</beans>

 	<beans profile="spring-data-jpa">
 		<jpa:repositories base-package="com.capgemini.ssc.springintro.bookdemo.repository.springdatajpa" />
 	</beans>

</beans>
